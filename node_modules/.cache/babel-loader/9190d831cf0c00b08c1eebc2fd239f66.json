{"ast":null,"code":"// Copyright 2011 Splunk, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"): you may\n// not use this file except in compliance with the License. You may obtain\n// a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n// License for the specific language governing permissions and limitations\n// under the License.\n(function () {\n  var request = require('request');\n\n  var Http = require('../../http');\n\n  var utils = require('../../utils');\n\n  var root = exports || this;\n  root.NodeHttp = Http.extend({\n    init: function () {\n      this._super();\n    },\n    makeRequest: function (url, message, callback) {\n      var request_options = {\n        url: url,\n        method: message.method,\n        headers: message.headers || {},\n        body: message.body || \"\",\n        timeout: message.timeout || 0,\n        jar: false,\n        followAllRedirects: true,\n        strictSSL: false\n      }; // Get the byte-length of the content, which adjusts for multi-byte characters\n\n      request_options.headers[\"Content-Length\"] = Buffer.byteLength(request_options.body, \"utf8\");\n      var that = this;\n      var req = request(request_options, function (error, res, data) {\n        // If we already aborted this request, then do nothing\n        if (req.wasAborted) {\n          return;\n        }\n\n        var response = {\n          headers: res ? res.headers : {},\n          statusCode: res ? res.statusCode : 600\n        };\n\n        var complete_response = that._buildResponse(error, response, data);\n\n        callback(complete_response);\n      });\n      req.on(\"abort\", function () {\n        var res = {\n          headers: {},\n          statusCode: \"abort\"\n        };\n        var data = \"{}\";\n\n        var complete_response = that._buildResponse(\"abort\", res, data);\n\n        callback(complete_response); // Note that we were aborted\n\n        req.wasAborted = true;\n      });\n      return req;\n    },\n    parseJson: function (json) {\n      return JSON.parse(json);\n    }\n  });\n})();","map":{"version":3,"sources":["/Users/cyfi/Downloads/splunk-sdk-javascript-create-react-app/examples/browser/create-splunk-react-app/node_modules/splunk-sdk/lib/platform/node/node_http.js"],"names":["request","require","Http","utils","root","exports","NodeHttp","extend","init","_super","makeRequest","url","message","callback","request_options","method","headers","body","timeout","jar","followAllRedirects","strictSSL","Buffer","byteLength","that","req","error","res","data","wasAborted","response","statusCode","complete_response","_buildResponse","on","parseJson","json","JSON","parse"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,CAAC,YAAW;AACR,MAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,MAAIC,IAAI,GAAMD,OAAO,CAAC,YAAD,CAArB;;AACA,MAAIE,KAAK,GAAKF,OAAO,CAAC,aAAD,CAArB;;AAEA,MAAIG,IAAI,GAAGC,OAAO,IAAI,IAAtB;AAEAD,EAAAA,IAAI,CAACE,QAAL,GAAgBJ,IAAI,CAACK,MAAL,CAAY;AACxBC,IAAAA,IAAI,EAAE,YAAW;AACb,WAAKC,MAAL;AACH,KAHuB;AAKxBC,IAAAA,WAAW,EAAE,UAASC,GAAT,EAAcC,OAAd,EAAuBC,QAAvB,EAAiC;AAC1C,UAAIC,eAAe,GAAG;AAClBH,QAAAA,GAAG,EAAEA,GADa;AAElBI,QAAAA,MAAM,EAAEH,OAAO,CAACG,MAFE;AAGlBC,QAAAA,OAAO,EAAEJ,OAAO,CAACI,OAAR,IAAmB,EAHV;AAIlBC,QAAAA,IAAI,EAAEL,OAAO,CAACK,IAAR,IAAgB,EAJJ;AAKlBC,QAAAA,OAAO,EAAEN,OAAO,CAACM,OAAR,IAAmB,CALV;AAMlBC,QAAAA,GAAG,EAAE,KANa;AAOlBC,QAAAA,kBAAkB,EAAE,IAPF;AAQlBC,QAAAA,SAAS,EAAE;AARO,OAAtB,CAD0C,CAY1C;;AACAP,MAAAA,eAAe,CAACE,OAAhB,CAAwB,gBAAxB,IAA4CM,MAAM,CAACC,UAAP,CAAkBT,eAAe,CAACG,IAAlC,EAAwC,MAAxC,CAA5C;AAEA,UAAIO,IAAI,GAAG,IAAX;AACA,UAAIC,GAAG,GAAGzB,OAAO,CAACc,eAAD,EAAkB,UAAUY,KAAV,EAAiBC,GAAjB,EAAsBC,IAAtB,EAA4B;AAC3D;AACA,YAAIH,GAAG,CAACI,UAAR,EAAoB;AAChB;AACH;;AAED,YAAIC,QAAQ,GAAG;AACXd,UAAAA,OAAO,EAAEW,GAAG,GAAGA,GAAG,CAACX,OAAP,GAAiB,EADlB;AAEXe,UAAAA,UAAU,EAAEJ,GAAG,GAAGA,GAAG,CAACI,UAAP,GAAoB;AAFxB,SAAf;;AAKA,YAAIC,iBAAiB,GAAGR,IAAI,CAACS,cAAL,CAAoBP,KAApB,EAA2BI,QAA3B,EAAqCF,IAArC,CAAxB;;AACAf,QAAAA,QAAQ,CAACmB,iBAAD,CAAR;AACH,OAbgB,CAAjB;AAeAP,MAAAA,GAAG,CAACS,EAAJ,CAAO,OAAP,EAAgB,YAAW;AACvB,YAAIP,GAAG,GAAG;AAAEX,UAAAA,OAAO,EAAE,EAAX;AAAee,UAAAA,UAAU,EAAE;AAA3B,SAAV;AACA,YAAIH,IAAI,GAAG,IAAX;;AACA,YAAII,iBAAiB,GAAGR,IAAI,CAACS,cAAL,CAAoB,OAApB,EAA6BN,GAA7B,EAAkCC,IAAlC,CAAxB;;AAEAf,QAAAA,QAAQ,CAACmB,iBAAD,CAAR,CALuB,CAOvB;;AACAP,QAAAA,GAAG,CAACI,UAAJ,GAAiB,IAAjB;AACH,OATD;AAWA,aAAOJ,GAAP;AACH,KAhDuB;AAkDxBU,IAAAA,SAAS,EAAE,UAASC,IAAT,EAAe;AACtB,aAAOC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAP;AACH;AApDuB,GAAZ,CAAhB;AAsDH,CA7DD","sourcesContent":["\n// Copyright 2011 Splunk, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"): you may\n// not use this file except in compliance with the License. You may obtain\n// a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n// License for the specific language governing permissions and limitations\n// under the License.\n\n(function() {\n    var request = require('request');\n    var Http    = require('../../http');\n    var utils   = require('../../utils');\n\n    var root = exports || this;\n\n    root.NodeHttp = Http.extend({\n        init: function() {\n            this._super();\n        },\n\n        makeRequest: function(url, message, callback) {\n            var request_options = {\n                url: url,\n                method: message.method,\n                headers: message.headers || {},\n                body: message.body || \"\",\n                timeout: message.timeout || 0,\n                jar: false,\n                followAllRedirects: true,\n                strictSSL: false\n            };\n\n            // Get the byte-length of the content, which adjusts for multi-byte characters\n            request_options.headers[\"Content-Length\"] = Buffer.byteLength(request_options.body, \"utf8\");\n\n            var that = this;\n            var req = request(request_options, function (error, res, data) {\n                // If we already aborted this request, then do nothing\n                if (req.wasAborted) {\n                    return;\n                }\n                \n                var response = {\n                    headers: res ? res.headers : {},\n                    statusCode: res ? res.statusCode : 600\n                };\n\n                var complete_response = that._buildResponse(error, response, data);\n                callback(complete_response);\n            });\n            \n            req.on(\"abort\", function() {\n                var res = { headers: {}, statusCode: \"abort\" };\n                var data = \"{}\";\n                var complete_response = that._buildResponse(\"abort\", res, data);\n                \n                callback(complete_response);\n                \n                // Note that we were aborted\n                req.wasAborted = true;\n            });\n            \n            return req;\n        },\n\n        parseJson: function(json) {\n            return JSON.parse(json);\n        }\n    });\n})();\n"]},"metadata":{},"sourceType":"script"}