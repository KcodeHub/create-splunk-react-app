{"ast":null,"code":"var _jsxFileName = \"/Users/cyfi/Downloads/splunk-sdk-javascript-create-react-app/examples/browser/create-splunk-react-app/src/SplunkJsExample.js\";\nimport React from 'react';\nimport './SplunkJsExample.css';\nimport Inputs from './Inputs';\nimport * as splunkjs from 'splunk-sdk'; // jquery.ajax is used for the underlying http client in ProxyHttp\n\nwindow.$ = require('jquery'); //const splunkjs = require('splunk-sdk');\n\nconst Async = splunkjs.Async;\n\nconst clientHttp = require('splunk-sdk/lib/platform/client/proxy_http');\n\nclass SplunkJsExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.generateError = this.generateError.bind(this);\n    this.state = {\n      username: 'admin',\n      password: 'adminuser',\n      results: []\n    };\n  }\n\n  handleQueryChange(query) {\n    this.setState({\n      query: query\n    });\n  }\n\n  handleSearch() {\n    var http = new clientHttp.ProxyHttp('/proxy');\n    var service = new splunkjs.Service(http, {\n      username: this.state.username,\n      password: this.state.password,\n      scheme: 'https',\n      host: 'localhost',\n      port: '3000'\n    });\n    var that = this;\n    Async.chain([// First, we log in\n    function (done) {\n      service.login(done);\n    }, // Perform the search\n    function (success, done) {\n      if (!success) {\n        done('Error logging in');\n      }\n\n      service.search('search index=\"react_error\" ', {}, done);\n    }, // Wait until the job is done\n    function (job, done) {\n      job.track({}, function (job) {\n        // Ask the server for the results\n        job.results({}, done);\n      });\n    }, // Print out the statistics and get the results\n    function (results, job, done) {\n      // Print out the statistics to the console\n      console.log('Splunk Search Job Statistics:');\n      console.log(`  Event Count: ${job.properties().eventCount}`);\n      console.log(`  Disk Usage: ${job.properties().diskUsage} bytes`);\n      console.log(`  Priority: ${job.properties().priority}`);\n      console.log(results);\n      that.setState({\n        results: results\n      });\n    }], function (err) {\n      console.error(err);\n    });\n  }\n\n  generateError() {\n    var http = new clientHttp.ProxyHttp('/proxy');\n    var service = new splunkjs.Service(http, {\n      username: this.state.username,\n      password: this.state.password,\n      scheme: 'https',\n      host: 'localhost',\n      port: '3000'\n    }); // Create a Logger Class for different Level\n\n    var Logger = splunkjs.Class.extend({\n      init: function (service, opts) {\n        this.service = service;\n        opts = opts || {};\n        this.params = {};\n        if (opts.index) this.params.index = opts.index;\n        if (opts.host) this.params.host = opts.host;\n        if (opts.source) this.params.source = opts.source;\n        if (opts.sourcetype) this.params.sourcetype = opts.sourcetype || \"react_error\";\n\n        if (!this.service) {\n          throw new Error(\"Must supply a valid service\");\n        }\n      },\n      log: function (data) {\n        var message = {\n          __time: new Date().toUTCString(),\n          level: \"LOG\",\n          data: data\n        };\n        this.service.log(message, this.params);\n        console.log(data);\n      },\n      error: function (data) {\n        var message = {\n          __time: new Date().toUTCString(),\n          level: \"ERROR\",\n          data: data\n        };\n        this.service.log(message, this.params);\n        console.error(data);\n      },\n      info: function (data) {\n        var message = {\n          __time: new Date().toUTCString(),\n          level: \"INFO\",\n          data: data\n        };\n        this.service.log(message, this.params);\n        console.info(data);\n      },\n      warn: function (data) {\n        var message = {\n          __time: new Date().toUTCString(),\n          level: \"WARN\",\n          data: data\n        };\n        this.service.log(message, this.params);\n        console.warn(data);\n      }\n    }); // First, we log in\n\n    service.login(function (err, success) {\n      if (err || !success) {\n        console.log(\"Login failure. Please check your server hostname and authentication credentials.\");\n        return;\n      } // Create our logger\n\n\n      var logger = new Logger(service, {\n        index: \"react_error\",\n        sourcetype: \"test\"\n      });\n      logger.error(\"Error Log Message\");\n      logger.info([\"useful\", \"info\"]);\n      logger.warn({\n        \"this\": {\n          \"is\": [\"a\", \"warning\"]\n        }\n      });\n    });\n  }\n\n  render() {\n    const results = this.state.results; // Find the index of the fields we want\n\n    const timeIndex = (results.fields || []).indexOf('_time');\n    const sourceIndex = (results.fields || []).indexOf('source');\n    const sourcetypeIndex = (results.fields || []).indexOf('sourcetype');\n    const rawIndex = (results.fields || []).indexOf('_raw');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SplunkExample\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Inputs, {\n      onClickGenerateError: this.generateError,\n      onClickSearch: this.handleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, \"Results\"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"Results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    }, \"_time\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 39\n      }\n    }, \"source\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 54\n      }\n    }, \"sourcetype\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 73\n      }\n    }, \"_raw\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, (results.rows || []).map((result, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: i.toString(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 32\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 55\n        }\n      }, result[timeIndex]), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 83\n        }\n      }, result[sourceIndex]), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 113\n        }\n      }, result[sourcetypeIndex]), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 147\n        }\n      }, result[rawIndex]));\n    }), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}\n\nexport default SplunkJsExample;","map":{"version":3,"sources":["/Users/cyfi/Downloads/splunk-sdk-javascript-create-react-app/examples/browser/create-splunk-react-app/src/SplunkJsExample.js"],"names":["React","Inputs","splunkjs","window","$","require","Async","clientHttp","SplunkJsExample","Component","constructor","props","handleSearch","bind","generateError","state","username","password","results","handleQueryChange","query","setState","http","ProxyHttp","service","Service","scheme","host","port","that","chain","done","login","success","search","job","track","console","log","properties","eventCount","diskUsage","priority","err","error","Logger","Class","extend","init","opts","params","index","source","sourcetype","Error","data","message","__time","Date","toUTCString","level","info","warn","logger","render","timeIndex","fields","indexOf","sourceIndex","sourcetypeIndex","rawIndex","rows","map","result","i","toString"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './SplunkJsExample.css';\nimport Inputs from './Inputs';\nimport * as splunkjs from 'splunk-sdk';\n\n// jquery.ajax is used for the underlying http client in ProxyHttp\nwindow.$ = require('jquery');\n\n//const splunkjs = require('splunk-sdk');\nconst Async  = splunkjs.Async;\nconst clientHttp = require('splunk-sdk/lib/platform/client/proxy_http');\n\nclass SplunkJsExample extends React.Component {\n    constructor(props) {\n      super(props);\n      this.handleSearch = this.handleSearch.bind(this);\n      this.generateError = this.generateError.bind(this);\n      this.state = {\n          username: 'admin',\n          password: 'adminuser',\n          results: [],\n      };\n    }\n    handleQueryChange(query) {\n        this.setState({query: query});\n    }\n\n    handleSearch() {\n        var http = new clientHttp.ProxyHttp('/proxy');\n        var service = new splunkjs.Service(http, {\n            username: this.state.username,\n            password: this.state.password,\n            scheme: 'https',\n            host: 'localhost',\n            port: '3000'\n        });\n\n\n        var that = this;\n        Async.chain([\n        // First, we log in\n        function(done) {\n            service.login(done);\n        },\n        // Perform the search\n        function(success, done) {\n            if (!success) {\n                done('Error logging in');\n            }\n            \n            service.search('search index=\"react_error\" ', {}, done);\n\n        },\n        // Wait until the job is done\n        function(job, done) {\n            job.track({}, function(job) {\n                // Ask the server for the results\n                job.results({}, done);\n            });\n        },\n        // Print out the statistics and get the results\n        function(results, job, done) {\n            // Print out the statistics to the console\n            console.log('Splunk Search Job Statistics:');\n            console.log(`  Event Count: ${job.properties().eventCount}`);\n            console.log(`  Disk Usage: ${job.properties().diskUsage} bytes`);\n            console.log(`  Priority: ${job.properties().priority}`);\n            console.log(results);\n            that.setState({results: results});\n        }],\n        function(err) {\n            console.error(err);        \n        }\n        );\n    }\n\n    generateError() {\n\n    var http = new clientHttp.ProxyHttp('/proxy');\n            var service = new splunkjs.Service(http, {\n                username: this.state.username,\n                password: this.state.password,\n                scheme: 'https',\n                host: 'localhost',\n                port: '3000'\n            });\n\n// Create a Logger Class for different Level\n\nvar Logger = splunkjs.Class.extend({\n    init: function(service, opts) {\n        this.service = service;\n\n        opts = opts || {};\n\n        this.params = {};\n        if (opts.index)      this.params.index      = opts.index;\n        if (opts.host)       this.params.host       = opts.host;\n        if (opts.source)     this.params.source     = opts.source;\n        if (opts.sourcetype) this.params.sourcetype = opts.sourcetype || \"react_error\";\n\n        if (!this.service) {\n            throw new Error(\"Must supply a valid service\");\n        }\n    },\n\n    log: function(data) {\n        var message = {\n            __time: (new Date()).toUTCString(),\n            level: \"LOG\",\n            data: data\n        };\n\n        this.service.log(message, this.params);\n        console.log(data);\n    },\n\n    error: function(data) {\n        var message = {\n            __time: (new Date()).toUTCString(),\n            level: \"ERROR\",\n            data: data\n        };\n\n        this.service.log(message, this.params);\n        console.error(data);\n    },\n\n    info: function(data) {\n        var message = {\n            __time: (new Date()).toUTCString(),\n            level: \"INFO\",\n            data: data\n        };\n\n        this.service.log(message, this.params);\n        console.info(data);\n    },\n\n    warn: function(data) {\n        var message = {\n            __time: (new Date()).toUTCString(),\n            level: \"WARN\",\n            data: data\n        };\n\n        this.service.log(message, this.params);\n        console.warn(data);\n    },\n});\n\n            // First, we log in\n            service.login(function(err, success) {\n                if (err || !success) {\n                    console.log(\"Login failure. Please check your server hostname and authentication credentials.\");\n                    return;\n                }\n\n                // Create our logger\n                var logger = new Logger(service, {index: \"react_error\", sourcetype: \"test\"});\n                logger.error(\"Error Log Message\");\n                logger.info([\"useful\", \"info\"]);\n                logger.warn({\"this\": {\"is\": [\"a\", \"warning\"]}});\n            });\n    }\n  \n    render() {\n      const results = this.state.results;\n\n      // Find the index of the fields we want\n      const timeIndex = (results.fields || []).indexOf('_time');\n      const sourceIndex = (results.fields || []).indexOf('source');\n      const sourcetypeIndex = (results.fields || []).indexOf('sourcetype');\n      const rawIndex = (results.fields || []).indexOf('_raw');\n      \n      return (\n        <div className='SplunkExample'>\n            <Inputs\n                onClickGenerateError = {this.generateError}\n                onClickSearch={this.handleSearch} />\n            <h3>Results</h3>\n            <table className='Results'>\n                <thead>\n                    <tr><th>_time</th><th>source</th><th>sourcetype</th><th>_raw</th></tr>\n                </thead>\n                <tbody>\n                    {(results.rows || []).map((result, i) => {\n                        return <tr key={i.toString()}><td>{result[timeIndex]}</td><td>{result[sourceIndex]}</td><td>{result[sourcetypeIndex]}</td><td>{result[rawIndex]}</td></tr>;\n                    })}\n                    <tr></tr>\n                </tbody>\n            </table>\n        </div>\n        );\n    }\n  }\n\n  export default SplunkJsExample;"]},"metadata":{},"sourceType":"module"}