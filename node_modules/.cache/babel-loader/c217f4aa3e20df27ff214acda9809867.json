{"ast":null,"code":"// Copyright 2011 Splunk, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"): you may\n// not use this file except in compliance with the License. You may obtain\n// a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n// License for the specific language governing permissions and limitations\n// under the License.\n(function () {\n  var Http = require('../../http');\n\n  var utils = require('../../utils');\n\n  var root = exports || this;\n\n  var getHeaders = function (headersString) {\n    var headers = {};\n    var headerLines = headersString.split(\"\\n\");\n\n    for (var i = 0; i < headerLines.length; i++) {\n      if (utils.trim(headerLines[i]) !== \"\") {\n        var headerParts = headerLines[i].split(\": \");\n        headers[headerParts[0]] = headerParts[1];\n      }\n    }\n\n    return headers;\n  }; // parseUri 1.2.2\n  // (c) Steven Levithan <stevenlevithan.com>\n  // MIT License\n\n\n  function parseUri(str) {\n    var o = parseUri.options,\n        m = o.parser[o.strictMode ? \"strict\" : \"loose\"].exec(str),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n      uri[o.key[i]] = m[i] || \"\";\n    }\n\n    uri[o.q.name] = {};\n    uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n      if ($1) {\n        uri[o.q.name][$1] = $2;\n      }\n    });\n    return uri;\n  }\n\n  parseUri.options = {\n    strictMode: false,\n    key: [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\", \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"],\n    q: {\n      name: \"queryKey\",\n      parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n    },\n    parser: {\n      strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n      loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n    }\n  };\n  var specials = /[.*+?|()\\[\\]{}\\\\$\\^]/g; // .*+?|()[]{}\\$^\n\n  var escape = function (str) {\n    str = str || \"\";\n    return str.replace(specials, \"\\\\$&\");\n  };\n\n  root.ProxyHttp = Http.extend({\n    init: function (prefix) {\n      this.prefix = prefix;\n\n      this._super();\n    },\n    makeRequest: function (url, message, callback) {\n      // Add our original destination to to headers,\n      // as some proxy implementations would rather\n      // use this.\n      message.headers[\"X-ProxyDestination\"] = url; // Need to remove the hostname from the URL\n\n      var parsed = parseUri(url);\n      var prefixToRemove = \"\" + (parsed.protocol ? parsed.protocol : \"\") + \"://\" + parsed.authority;\n      url = url.replace(new RegExp(escape(prefixToRemove), \"i\"), \"\"); // Now, we prepend the prefix\n\n      url = this.prefix + url;\n      var that = this;\n      var params = {\n        url: url,\n        type: message.method,\n        headers: message.headers,\n        data: message.body || \"\",\n        timeout: message.timeout || 0,\n        dataType: \"text\",\n        success: function (data, error, res) {\n          if (req.wasAborted) {\n            return;\n          }\n\n          var response = {\n            statusCode: res.status,\n            headers: getHeaders(res.getAllResponseHeaders())\n          };\n\n          var complete_response = that._buildResponse(error, response, data);\n\n          callback(complete_response);\n        },\n        error: function (res, data, error) {\n          if (req.wasAborted) {\n            return;\n          }\n\n          var response = {\n            statusCode: res.status,\n            headers: getHeaders(res.getAllResponseHeaders())\n          };\n\n          if (data === \"abort\") {\n            response.statusCode = \"abort\";\n            res.responseText = \"{}\";\n          }\n\n          var json = res.responseText;\n\n          var complete_response = that._buildResponse(error, response, json);\n\n          callback(complete_response); // Note the fact that we aborted after we call\n          // our initial callback, otherwise it will never\n          // execute\n\n          if (data === \"abort\") {\n            req.wasAborted = true;\n          }\n        }\n      };\n      var req = $.ajax(params);\n      return req;\n    },\n    parseJson: function (json) {\n      // JQuery does this for us\n      return JSON.parse(json);\n    }\n  });\n  root.SplunkWebHttp = root.ProxyHttp.extend({\n    init: function () {\n      this._super(\"/en-US/splunkd/__raw\");\n    }\n  });\n})();","map":{"version":3,"sources":["/Users/cyfi/Downloads/splunk-sdk-javascript-create-react-app/examples/browser/create-splunk-react-app/node_modules/splunk-sdk/lib/platform/client/proxy_http.js"],"names":["Http","require","utils","root","exports","getHeaders","headersString","headers","headerLines","split","i","length","trim","headerParts","parseUri","str","o","options","m","parser","strictMode","exec","uri","key","q","name","replace","$0","$1","$2","strict","loose","specials","escape","ProxyHttp","extend","init","prefix","_super","makeRequest","url","message","callback","parsed","prefixToRemove","protocol","authority","RegExp","that","params","type","method","data","body","timeout","dataType","success","error","res","req","wasAborted","response","statusCode","status","getAllResponseHeaders","complete_response","_buildResponse","responseText","json","$","ajax","parseJson","JSON","parse","SplunkWebHttp"],"mappings":"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","sourcesContent":["\n// Copyright 2011 Splunk, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"): you may\n// not use this file except in compliance with the License. You may obtain\n// a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n// License for the specific language governing permissions and limitations\n// under the License.\n\n(function() {\n    var Http    = require('../../http');\n    var utils   = require('../../utils');\n\n    var root = exports || this;\n    \n    var getHeaders = function(headersString) {\n        var headers = {};\n        var headerLines = headersString.split(\"\\n\");\n        for(var i = 0; i < headerLines.length; i++) {\n            if (utils.trim(headerLines[i]) !== \"\") {\n                var headerParts = headerLines[i].split(\": \");\n                headers[headerParts[0]] = headerParts[1];\n            }\n        }\n\n        return headers;\n    };\n    \n    // parseUri 1.2.2\n    // (c) Steven Levithan <stevenlevithan.com>\n    // MIT License\n    function parseUri (str) {\n        var o   = parseUri.options,\n            m   = o.parser[o.strictMode ? \"strict\" : \"loose\"].exec(str),\n            uri = {},\n            i   = 14;\n\n        while (i--) {\n            uri[o.key[i]] = m[i] || \"\";\n        }\n\n        uri[o.q.name] = {};\n        uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n            if ($1) {\n                uri[o.q.name][$1] = $2;\n            }\n        });\n\n        return uri;\n    }\n\n    parseUri.options = {\n        strictMode: false,\n        key: [\"source\",\"protocol\",\"authority\",\"userInfo\",\"user\",\"password\",\"host\",\"port\",\"relative\",\"path\",\"directory\",\"file\",\"query\",\"anchor\"],\n        q:   {\n            name:   \"queryKey\",\n            parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n        },\n        parser: {\n            strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n            loose:  /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n        }\n    };\n    \n    var specials = /[.*+?|()\\[\\]{}\\\\$\\^]/g; // .*+?|()[]{}\\$^\n    var escape = function(str) {\n        str = str || \"\";\n        return str.replace(specials, \"\\\\$&\");\n    };\n\n    root.ProxyHttp = Http.extend({\n        init: function(prefix) {\n            this.prefix = prefix;\n            this._super();\n        },\n\n        makeRequest: function(url, message, callback) {\n            // Add our original destination to to headers,\n            // as some proxy implementations would rather\n            // use this.\n            message.headers[\"X-ProxyDestination\"] = url;\n            \n            // Need to remove the hostname from the URL\n            var parsed = parseUri(url);\n            var prefixToRemove = \"\" + (parsed.protocol ? parsed.protocol : \"\") + \"://\" + parsed.authority;\n            url = url.replace(new RegExp(escape(prefixToRemove), \"i\"), \"\");\n            \n            // Now, we prepend the prefix\n            url = this.prefix + url;\n            \n            var that = this;\n            var params = {\n                url: url,\n                type: message.method,\n                headers: message.headers,\n                data: message.body || \"\",\n                timeout: message.timeout || 0,\n                dataType: \"text\",\n                success: function(data, error, res) {\n                    if (req.wasAborted) {\n                        return;\n                    }\n                    \n                    var response = {\n                        statusCode: res.status,\n                        headers: getHeaders(res.getAllResponseHeaders())\n                    };\n\n                    var complete_response = that._buildResponse(error, response, data);\n                    callback(complete_response);\n                },\n                error: function(res, data, error) {\n                    if (req.wasAborted) {\n                        return;\n                    }\n                    \n                    var response = {\n                        statusCode: res.status,\n                        headers: getHeaders(res.getAllResponseHeaders())\n                    };\n\n                    if (data === \"abort\") {\n                        response.statusCode = \"abort\";\n                        res.responseText = \"{}\";\n                    }\n                    var json = res.responseText;\n\n                    var complete_response = that._buildResponse(error, response, json);\n                    callback(complete_response);\n                    \n                    // Note the fact that we aborted after we call\n                    // our initial callback, otherwise it will never\n                    // execute\n                    if (data === \"abort\") {\n                        req.wasAborted = true;\n                    }\n                }\n            };\n            \n            var req = $.ajax(params);\n            \n            return req;\n        },\n\n        parseJson: function(json) {\n            // JQuery does this for us\n            return JSON.parse(json);\n        }\n    });\n\n    root.SplunkWebHttp = root.ProxyHttp.extend({\n        init: function() {\n            this._super(\"/en-US/splunkd/__raw\");\n        }\n    });\n})();"]},"metadata":{},"sourceType":"script"}